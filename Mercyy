--// Load Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Mercyy Hub - Math Murder",
    LoadingTitle = "Mercyy Hub",
    LoadingSubtitle = "by Mercyy",
    ConfigurationSaving = {
        Enabled = false,
    },
    Discord = {
        Enabled = false,
    },
    KeySystem = false,
})

-- Main Tab
local MainTab = Window:CreateTab("Main", 4483362458)

-- Toggle state
getgenv().AutoAnswerEnabled = false

-- Setup Function
local function SetupAutoAnswer()
    if getgenv().MercyyConnections then
        for _, v in ipairs(getgenv().MercyyConnections) do
            v:Disconnect()
        end
    end

    getgenv().MercyyConnections = {}

    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer

    local Screen = workspace.Map.Functional.Screen
    local QuestionText = Screen.SurfaceGui.MainFrame.MainGameContainer.MainTxtContainer.QuestionText
    local TypingText = Screen.SurfaceGui.MainFrame.MainGameContainer.MainTxtContainer.TypingText
    local Fill = Screen.SurfaceGui.MainFrame.MainGameContainer.TimerbarContainer.Fill

    local ClickSound = ReplicatedStorage.Assets.SFX.Click
    local GameEvent = ReplicatedStorage.Events.GameEvent
    local CurrentSpeller = ReplicatedStorage.GameValues.CurrentSpeller

    local function SetTyping(text)
        ClickSound:Play()
        TypingText.Text = text
        GameEvent:FireServer("updateAnswer", text)
    end

    -- Auto Answer Logic
    local conn1 = QuestionText:GetPropertyChangedSignal("Text"):Connect(function()
        if not getgenv().AutoAnswerEnabled then return end

        local Character = Player.Character or Player.CharacterAdded:Wait()
        local question = string.split(QuestionText.Text, "=")[1]
        local result = tostring(loadstring("return " .. string.gsub(question, "x", "*"))())

        Fill:SetAttribute("Answer", result)
        Fill:SetAttribute("UhunAnswer", math.random(3, 6) / 10)

        if CurrentSpeller.Value ~= Player then return end
        task.wait(math.random(3, 8) / 10)
        if tonumber(result) >= 15 then
            task.wait(math.random(5, 10) / 10)
        end

        while TypingText.Text ~= result do
            if #TypingText.Text >= #result then
                local length = string.sub(TypingText.Text, 1, #result) ~= result and 1 or #result
                while #TypingText.Text >= length do
                    SetTyping(string.sub(TypingText.Text, 1, #TypingText.Text - 1))
                    task.wait(0.05)
                end
            end

            local typingSpeed = math.random(2, 6) / 10
            if math.random(1, 4) == 4 and #TypingText.Text > 0 and Fill.Size.X.Scale >= 0.3 then
                SetTyping(TypingText.Text .. tostring(math.random(0, 9)))
                task.wait(math.random(2, 5) / 10)
                SetTyping(string.sub(TypingText.Text, 1, #TypingText.Text - 1))
                task.wait(math.random(1, 3) / 10)
            end

            SetTyping(string.sub(result, 1, #TypingText.Text + 1))
            local speedMultiplier = math.clamp(Fill.Size.X.Scale, 0.25, 1)
            task.wait(typingSpeed * speedMultiplier)

            if math.random(1, 5) == 5 and Fill.Size.X.Scale >= 0.25 then
                task.wait(math.random(3, 7) / 10)
            end
        end

        GameEvent:FireServer("submitAnswer", result)
    end)

    -- Show Correct Answer
    local conn2 = QuestionText:GetPropertyChangedSignal("Text"):Connect(function()
        local e = QuestionText.Text:gsub("=", ""):gsub("x", "*")
        local success, result = pcall(function() return loadstring("return " .. e)() end)
        task.wait()
        if success and type(result) == "number" then
            QuestionText.Text = e:gsub("%*", "x") .. "= " .. result
        end
    end)

    table.insert(getgenv().MercyyConnections, conn1)
    table.insert(getgenv().MercyyConnections, conn2)
end

-- Toggle in UI
MainTab:CreateToggle({
    Name = "Auto Answer",
    CurrentValue = false,
    Flag = "AutoAnswer",
    Callback = function(Value)
        getgenv().AutoAnswerEnabled = Value
        if Value then
            SetupAutoAnswer()
        end
    end,
})
