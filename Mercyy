--// Mercyy Hub: Auto Answer UI
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Remove previous instances
pcall(function() game.CoreGui.MercyyHub:Destroy() end)

-- UI Setup
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "MercyyHub"
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 300, 0, 200)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true

local Title = Instance.new("TextLabel", MainFrame)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Title.Text = "Mercyy Hub | Main Tab"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20

local ToggleButton = Instance.new("TextButton", MainFrame)
ToggleButton.Size = UDim2.new(0, 260, 0, 40)
ToggleButton.Position = UDim2.new(0, 20, 0, 60)
ToggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.Gotham
ToggleButton.TextSize = 18
ToggleButton.Text = "Auto Answer: OFF"

-- Variables
local AutoAnswerEnabled = false
local Connections = {}

-- Auto Answer Function
local function SetupAutoAnswer()
    -- Disconnect old connections
    for _, conn in pairs(Connections) do
        conn:Disconnect()
    end
    table.clear(Connections)

    local Screen = workspace.Map.Functional.Screen
    local QuestionText = Screen.SurfaceGui.MainFrame.MainGameContainer.MainTxtContainer.QuestionText
    local TypingText = Screen.SurfaceGui.MainFrame.MainGameContainer.MainTxtContainer.TypingText
    local Fill = Screen.SurfaceGui.MainFrame.MainGameContainer.TimerbarContainer.Fill

    local ClickSound = ReplicatedStorage.Assets.SFX.Click
    local GameEvent = ReplicatedStorage.Events.GameEvent
    local CurrentSpeller = ReplicatedStorage.GameValues.CurrentSpeller

    local function SetTyping(text)
        ClickSound:Play()
        TypingText.Text = text
        GameEvent:FireServer("updateAnswer", text)
    end

    local conn1 = QuestionText:GetPropertyChangedSignal("Text"):Connect(function()
        if not AutoAnswerEnabled then return end
        local Character = Player.Character or Player.CharacterAdded:Wait()
        local question = string.split(QuestionText.Text, "=")[1]
        local result = tostring(loadstring("return " .. string.gsub(question, "x", "*"))())

        Fill:SetAttribute("Answer", math.random(1, 2) == 1 and result)
        Fill:SetAttribute("UhunAnswer", math.random(3, 6) / 10)

        if CurrentSpeller.Value ~= Player then return end
        task.wait(math.random(3, 8) / 10)

        if tonumber(result) >= 15 then
            task.wait(math.random(5, 10) / 10)
        end

        while TypingText.Text ~= result do
            if #TypingText.Text >= #result then
                local length = string.sub(TypingText.Text, 1, #result) ~= result and 1 or #result
                while #TypingText.Text >= length do
                    SetTyping(string.sub(TypingText.Text, 1, #TypingText.Text - 1))
                    task.wait(0.05)
                end
            end

            local typingSpeed = math.random(2, 6) / 10
            if math.random(1, 4) == 4 and #TypingText.Text > 0 and Fill.Size.X.Scale >= 0.3 then
                SetTyping(TypingText.Text .. tostring(math.random(0, 9)))
                task.wait(math.random(2, 5) / 10)
                SetTyping(string.sub(TypingText.Text, 1, #TypingText.Text - 1))
                task.wait(math.random(1, 3) / 10)
            end

            SetTyping(string.sub(result, 1, #TypingText.Text + 1))
            local speedMultiplier = math.clamp(Fill.Size.X.Scale, 0.25, 1)
            task.wait(typingSpeed * speedMultiplier)

            if math.random(1, 5) == 5 and Fill.Size.X.Scale >= 0.25 then
                task.wait(math.random(3, 7) / 10)
            end
        end

        GameEvent:FireServer("submitAnswer", result)
    end)

    -- Show Correct Answer on screen
    local conn2 = QuestionText:GetPropertyChangedSignal("Text"):Connect(function()
        local e = QuestionText.Text:gsub("=", ""):gsub("x", "*")
        local success, result = pcall(function()
            return loadstring("return " .. e)()
        end)
        task.wait()
        if success and type(result) == "number" then
            QuestionText.Text = e:gsub("%*", "x") .. "= " .. result
        end
    end)

    table.insert(Connections, conn1)
    table.insert(Connections, conn2)
end

-- Toggle Auto Answer
ToggleButton.MouseButton1Click:Connect(function()
    AutoAnswerEnabled = not AutoAnswerEnabled
    ToggleButton.Text = AutoAnswerEnabled and "Auto Answer: ON" or "Auto Answer: OFF"
    SetupAutoAnswer()
end)
